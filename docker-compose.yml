version: "3.8"

services:
  db:
    image: mysql/mysql-server:8.0
    environment:
      MYSQL_DATABASE: ${MYSQL_DATABASE}
      MYSQL_USER: ${MYSQL_USER}
      MYSQL_PASSWORD: ${MYSQL_PASSWORD}
      MYSQL_ROOT_PASSWORD: ${MYSQL_ROOT_PASSWORD}
    ports:
      - "3306:3306"
    volumes:
      - "mysqldata:/var/lib/mysql"
    networks:
      - teamg

  frontend:
    build:
      context: ./frontend # 프론트엔드 Dockerfile이 있는 디렉토리
    ports:
      - "5173"
    depends_on:
      - web
    networks:
      - teamg

  rabbitmq:
    image: rabbitmq:management
    environment:
      RABBITMQ_DEFAULT_USER: ${RABBITMQ_USER}
      RABBITMQ_DEFAULT_PASS: ${RABBITMQ_PASSWORD}
    env_file:
      - .env
    ports:
      - "5672:5672"
      - "15672:15672"
    networks:
      - teamg

  celery:
    build:
      context: ./backend # Dockerfile이 있는 디렉토리를 지정
    command: celery -A backend worker -l info
    volumes:
      - ./backend:/app
    env_file:
      - .env # 환경 변수 파일 추가
    depends_on:
      - rabbitmq
      - db # 데이터베이스에 접근할 수 있도록 설정
    networks:
      - teamg

  web:
    build:
      context: ./backend # Dockerfile이 있는 디렉토리를 지정
    command: >
      sh -c "python manage.py makemigrations &&
             python manage.py migrate &&
             python manage.py collectstatic --noinput &&
             gunicorn --bind 0.0.0.0:8000 backend.wsgi:application"
    ports:
      - "8000:8000"
    restart: always
    env_file:
      - .env
    depends_on:
      - db
      - rabbitmq
      - celery
    networks:
      - teamg

  nginx:
    build:
      context: ./nginx
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./static:/static
      - ./nginx/nginx.conf:/etc/nginx/nginx.conf:ro
      - ./html:/usr/share/nginx/html:ro
      - /etc/letsencrypt:/etc/letsencrypt:ro
    depends_on:
      - web
    networks:
      - teamg

  phpmyadmin:
    image: phpmyadmin/phpmyadmin
    ports:
      - "8080:80"
    environment:
      PMA_HOST: db
      MYSQL_ROOT_PASSWORD: ${MYSQL_ROOT_PASSWORD}
    depends_on:
      - db
    networks:
      - teamg

volumes:
  mysqldata:

networks:
  teamg:
    driver: bridge
